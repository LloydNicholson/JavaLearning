import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;
import java.util.Scanner;

public class Demo {

	public static void main(String[] args) {
		LinkedList<String> placesToVisit = new LinkedList<String>();
		
		addInOrder(placesToVisit, "Cape Town");
		addInOrder(placesToVisit, "Johannesburg");
		addInOrder(placesToVisit, "Durban");
		addInOrder(placesToVisit, "Bloemfontein");
		addInOrder(placesToVisit, "Bhisho");
		addInOrder(placesToVisit, "Kimberley");
		
		printList(placesToVisit);
		

	}
	
	public static void printList(LinkedList<String> linkedList) {
		Iterator<String> i = linkedList.iterator();
		while (i.hasNext()) {
			System.out.println("Now visiting " + i.next());
		}
		System.out.println("====================");
	}

	private static boolean addInOrder(LinkedList<String> linkedList, String newCity) {
		ListIterator<String> stringListIterator = linkedList.listIterator();
		while(stringListIterator.hasNext()) {
			int comparison = stringListIterator.next().compareTo(newCity);
			if (comparison == 0) {
				// equal, do not add
				System.out.println(newCity + " is already a destination");
				return false;
			} else if(comparison > 0) {
				// new city should appear before this one
				stringListIterator.previous();
				stringListIterator.add(newCity);
				return true;
			} else if(comparison < 0) {
				// move to next city
				
			}
		}
		stringListIterator.add(newCity);
		return true;
	}
	
	private static void visit(LinkedList<String> cities) {
		Scanner scanner = new Scanner(System.in);
		boolean quit = false;
		ListIterator<String> listIterator = cities.listIterator();
		while (cities.getFirst() == null) {
			System.out.println("No cities in the itinery");
		}
	}
	
	
	
	
	
	
	
	
	
	
	
}
